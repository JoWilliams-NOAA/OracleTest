
-----START HERE
DROP table EAP_data_20250411;
--REPLACE ALL WITH CURRENT DATE
create table EAP_data_20250411 as
select * from gss.VMS_EAP_API_DATA where gps_date > '2021-11-08' --DO NOT REPLACE THIS DATE
ORDER BY BOX_NUMBER DESC;
select * from EAP_data_20250411;

SELECT MAX(LOADED_DATE) AS "Max Date"  -- Selects the maximum value of the ord_date column and aliases it as "Max Date"
FROM EAP_data_20250411;
SELECT COUNT(*) FROM EAP_data_20250411;
--select * from EAP_data_20250411 WHERE gps_date < '2023-08-17' OR gps_date > '2025-03-08' AND GPS_VOID=0;

--UPDATE FILE NAMES ONLY IF YOU GET A NEW INSTALLATION TABLE FROM LGL
select * from EAP_ASSIGNMENTS_02072025;
select COUNT(*) from EAP_ASSIGNMENTS_02072025;

--ALTER TABLE EAP_data_20250411 ADD (GPS_VALID INT, GPS_VOID INT, DATE_VOID INT, GPS_DATE_VOID INT, POWER_ON INT, POWER_DOWN INT);
--SELECT * FROM EAP_data_20250411;
--UPDATE EAP_data_20250411
--SET GPS_VALID=0;
--UPDATE EAP_data_20250411
--SET GPS_VOID=0;
--UPDATE EAP_data_20250411
--SET DATE_VOID=0;
--UPDATE EAP_data_20250411
--SET GPS_DATE_VOID=0;
--UPDATE EAP_data_20250411
--SET POWER_ON=0;
--UPDATE EAP_data_20250411
--SET POWER_DOWN=0;


--UPDATE EAP_data_20250411
--SET POWER=1
--WHERE GPS_STATUS = 'POWER_DOWN' OR  GPS_STATUS = 'POWER_ON';
--SELECT COUNT(*) FROM EAP_data_20250411 WHERE POWER=1;
--UPDATE EAP_data_20250411
--SET POWER=0
--WHERE POWER IS NULL;
--SELECT COUNT(*) FROM EAP_data_20250411 WHERE POWER=0;
--SELECT COUNT(*) FROM EAP_data_20250411 WHERE POWER=1;


ALTER TABLE EAP_data_20250411 ADD (GPS_VALID INT, GPS_VOID INT, DATE_VOID INT, GPS_DATE_VOID INT, POWER_ON INT, POWER_DOWN INT);
SELECT * FROM EAP_data_20250411;
UPDATE EAP_data_20250411
SET POWER_ON=1
WHERE GPS_STATUS = 'POWER_ON';
SELECT COUNT(*) FROM EAP_data_20250411 WHERE POWER_ON=1;
UPDATE EAP_data_20250411
SET POWER_ON=0
WHERE POWER_ON IS NULL;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE POWER_ON=0;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE POWER_ON=1;
COMMIT;

UPDATE EAP_data_20250411
SET POWER_DOWN=1
WHERE GPS_STATUS = 'POWER_DOWN';
SELECT COUNT(*) FROM EAP_data_20250411 WHERE POWER_DOWN=1;
UPDATE EAP_data_20250411
SET POWER_DOWN=0
WHERE POWER_DOWN IS NULL;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE POWER_DOWN=0;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE POWER_DOWN=1;
COMMIT;

UPDATE EAP_data_20250411
SET GPS_VOID=1
WHERE GPS_STATUS = 'GPS_VOID';
--WHERE (latitude LIKE '99:%' OR longitude LIKE '199:%' OR latitude LIKE '39:%' OR longitude LIKE '19:%' OR latitude IS NULL OR longitude IS NULL) AND year BETWEEN 2020 AND 2024;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE GPS_VOID=1;
UPDATE EAP_data_20250411
SET GPS_VOID=0
WHERE GPS_VOID IS NULL;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE GPS_VOID=1;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE GPS_VOID=0;
COMMIT;

UPDATE EAP_data_20250411
SET GPS_VALID=1
--WHERE gps_date > '2023-08-17' AND GPS_STATUS = 'GPS_VALID';
WHERE GPS_STATUS = 'GPS_VALID';
--WHERE  (latitude NOT LIKE '99:%' AND longitude NOT LIKE '199:%' AND latitude NOT LIKE '39:%' AND longitude NOT LIKE '19:%' AND latitude IS NOT NULL AND longitude IS Not NULL)AND year NOT BETWEEN 2020 AND 2024;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE GPS_VALID=1;
UPDATE EAP_data_20250411
SET GPS_VALID=0
WHERE GPS_VALID IS NULL;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE GPS_VALID=1;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE GPS_VALID=0;
COMMIT;

UPDATE EAP_data_20250411
SET DATE_VOID=1
WHERE gps_date < '2023-08-17' OR gps_date > 'Max Date' AND GPS_VALID=1;
--WHERE gps_date < '2023-08-17' OR gps_date > '2025-03-08' AND GPS_VALID=1;
--WHERE  (latitude NOT LIKE '99:%' AND longitude NOT LIKE '199:%' AND latitude NOT LIKE '39:%' AND longitude NOT LIKE '19:%' AND latitude IS NOT NULL AND longitude IS Not NULL)AND year NOT BETWEEN 2020 AND 2024;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE DATE_VOID=1;
UPDATE EAP_data_20250411
SET DATE_VOID=0
WHERE DATE_VOID IS NULL;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE DATE_VOID=1;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE DATE_VOID=0;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE gps_date < 'Max Date';
COMMIT;

UPDATE EAP_data_20250411
SET GPS_DATE_VOID=1
--WHERE gps_date < '2023-08-17' OR gps_date > '2025-03-08' AND GPS_VOID=1;
WHERE gps_date < '2023-08-17' OR gps_date > 'Max Date' AND GPS_VOID=1;
--WHERE  (latitude NOT LIKE '99:%' AND longitude NOT LIKE '199:%' AND latitude NOT LIKE '39:%' AND longitude NOT LIKE '19:%' AND latitude IS NOT NULL AND longitude IS Not NULL)AND year NOT BETWEEN 2020 AND 2024;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE GPS_DATE_VOID=1;
UPDATE EAP_data_20250411
SET GPS_DATE_VOID=0
WHERE GPS_DATE_VOID IS NULL;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE GPS_DATE_VOID=1;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE GPS_DATE_VOID=0;
COMMIT;



SELECT COUNT(*) FROM EAP_data_20250411 WHERE GPS_VALID=1;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE DATE_VOID=1;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE GPS_VOID=1;
SELECT COUNT(*) FROM EAP_data_20250411 WHERE GPS_DATE_VOID=1;
SELECT * FROM EAP_data_20250411;

--create table EAP_data_20250411_POWERREMOVED as
--SELECT * FROM EAP_data_20250411 WHERE POWER <>1;
--select count (*) from EAP_data_20250411_POWERREMOVED;
--SELECT * FROM EAP_data_20250411_POWERREMOVED;
DROP TABLE EAP_data_status;
create table EAP_data_status as
SELECT BOX_NUMBER, LOADED_BY, MAX(GPS_DATE) AS "Max Date", SUM(GPS_VALID)AS "GPS_VALID", SUM (GPS_VOID)AS "GPS_VOID", SUM(DATE_VOID)AS "DATE_VOID",  SUM(GPS_DATE_VOID)AS "GPS_DATE_VOID", SUM(POWER_ON) AS "POWER_ON", SUM(POWER_DOWN) AS "POWER_DOWN", SUM (GPS_VALID + DATE_VOID + GPS_VOID + GPS_DATE_VOID)AS "TOTAL" FROM EAP_data_20250411
GROUP BY BOX_NUMBER, LOADED_BY;
--SELECT BOX_NUMBER, SUM (GPS_VALID)AS "GPS_VALID",SUM(DATE_VOID)AS "Bad Date", SUM (GPS_VOID)AS "Bad GPS" , SUM(GPS_DATE_VOID)AS "Bad Date/GPS", SUM (GPS_VALID + DATE_VOID + GPS_VOID + GPS_DATE_VOID)AS "Total" , ROUND (100 * SUM (DATE_VOID + GPS_VOID + GPS_DATE_VOID)/SUM(GPS_VALID + DATE_VOID + GPS_VOID + GPS_DATE_VOID),2)AS "Percent Bad" FROM EAP_data_20250411
--GROUP BY BOX_NUMBER;
SELECT * FROM EAP_data_status;
ALTER TABLE EAP_data_status ADD (PERCENT_BAD DECIMAL(5,2),DATA_STATUS CHAR(36));

--select type, craft, sum(NVL(regular, 0) + NVL(overtime, 0) ) as total_hours
--from hours_t
--group by type, craft
--order by type, craft
--DROP TABLE EAP_data_status;
--create table EAP_data_status as
--SELECT BOX_NUMBER, LOADED_BY, MAX(GPS_DATE) AS "Max Date", SUM(NVL(GPS_VALID,0))AS "GPS_VALID", SUM(NVL(GPS_VOID)AS "GPS_VOID,0))", SUM(NVL(DATE_VOID,0z))AS "DATE_VOID",  SUM(NVL(GPS_DATE_VOID,0))AS "GPS_DATE_VOID", SUM(NVL(POWER_ON,0)) AS "POWER_ON", SUM(NVL(POWER_DOWN,0)) AS "POWER_DOWN", SUM (NVL(GPS_VALID,0) + NVL(DATE_VOID,0) + NVL(GPS_VOID,0) + NVL(GPS_DATE_VOID,0))AS "TOTAL" FROM EAP_data_20250411
--GROUP BY BOX_NUMBER, LOADED_BY;
--SELECT BOX_NUMBER, SUM (GPS_VALID)AS "GPS_VALID",SUM(DATE_VOID)AS "Bad Date", SUM (GPS_VOID)AS "Bad GPS" , SUM(GPS_DATE_VOID)AS "Bad Date/GPS", SUM (GPS_VALID + DATE_VOID + GPS_VOID + GPS_DATE_VOID)AS "Total" , ROUND (100 * SUM (DATE_VOID + GPS_VOID + GPS_DATE_VOID)/SUM(GPS_VALID + DATE_VOID + GPS_VOID + GPS_DATE_VOID),2)AS "Percent Bad" FROM EAP_data_20250411
--GROUP BY BOX_NUMBER;
--SELECT * FROM EAP_data_status;
--ALTER TABLE EAP_data_status ADD (PERCENT_BAD DECIMAL(5,2),DATA_STATUS CHAR(36));



UPDATE EAP_data_status
SET PERCENT_BAD = (100 * (DATE_VOID + GPS_VOID + GPS_DATE_VOID) / TOTAL) WHERE TOTAL > 0;

SELECT * FROM EAP_data_status WHERE "PERCENT_BAD" > 20;
UPDATE EAP_data_status
SET DATA_STATUS='Has Issues (Bad Pings >20%)' WHERE "PERCENT_BAD" > 20;
UPDATE EAP_data_status
SET DATA_STATUS='Good (Bad Pings <=20%)' WHERE "PERCENT_BAD" <= 20;

DROP table EAP_ass_data;
create table EAP_ass_data as
SELECT * FROM EAP_data_status
FULL JOIN EAP_ASSIGNMENTS_02072025
ON EAP_data_status.BOX_NUMBER = EAP_ASSIGNMENTS_02072025.VMS_ID;
SELECT * FROM EAP_ass_data;
SELECT COUNT(*) FROM EAP_ass_data;

UPDATE EAP_ass_data
SET LOADED_BY='no data' WHERE LOADED_BY is NULL;

UPDATE EAP_ass_data
SET VMS_ID='Not in EAP_Installations' WHERE VMS_ID is NULL;
SELECT * FROM EAP_ass_data;

--END.  EXPORT AS .CSV.  OPEN IN NOTEPAD AND SAVE AS .TXT.  OPEN IN EXCEL.  SPECIFY BOX_NUMBER AND VMS_ID fields ast TEXT
-----------------------------------------------------------------------------------------------

UPDATE EAP_data_status
SET ROUND (100 * SUM (DATE_VOID + GPS_VOID + GPS_DATE_VOID)/SUM(GPS_VALID + DATE_VOID + GPS_VOID + GPS_DATE_VOID),2)AS "Percent Bad" FROM EAP_data_20250411

SELECT * FROM EAP_data_status;
ALTER TABLE EAP_data_status ADD DATA_STATUS CHAR(36);
SELECT * FROM EAP_data_status;



DROP TABLE EAP_data_status;
create table EAP_data_status as
SELECT BOX_NUMBER, LOADED_BY, MAX(GPS_DATE) AS "Max Date", SUM(GPS_VALID)AS "GPS_VALID", SUM (GPS_VOID)AS "GPS_VOID", SUM(DATE_VOID)AS "DATE_VOID", SUM(GPS_DATE_VOID)AS "GPS_DATE_VOID", SUM(POWER_ON) AS "Power_ON", SUM(POWER_DOWN) AS "POWER_DOWN", SUM (GPS_VALID + DATE_VOID + GPS_VOID + GPS_DATE_VOID)AS "Total" , ROUND (100 * SUM (DATE_VOID + GPS_VOID + GPS_DATE_VOID)/SUM(GPS_VALID + DATE_VOID + GPS_VOID + GPS_DATE_VOID),2)AS "Percent Bad" FROM EAP_data_20250411
GROUP BY BOX_NUMBER, LOADED_BY;
--SELECT BOX_NUMBER, SUM (GPS_VALID)AS "GPS_VALID",SUM(DATE_VOID)AS "Bad Date", SUM (GPS_VOID)AS "Bad GPS" , SUM(GPS_DATE_VOID)AS "Bad Date/GPS", SUM (GPS_VALID + DATE_VOID + GPS_VOID + GPS_DATE_VOID)AS "Total" , ROUND (100 * SUM (DATE_VOID + GPS_VOID + GPS_DATE_VOID)/SUM(GPS_VALID + DATE_VOID + GPS_VOID + GPS_DATE_VOID),2)AS "Percent Bad" FROM EAP_data_20250411
--GROUP BY BOX_NUMBER;
SELECT * FROM EAP_data_status;
ALTER TABLE EAP_data_status ADD DATA_STATUS CHAR(36);
SELECT * FROM EAP_data_status;

SELECT * FROM EAP_data_status WHERE "Percent Bad" > 20;
UPDATE EAP_data_status
SET DATA_STATUS='Has Issues (Bad Pings >20%)' WHERE "Percent Bad" > 20;
UPDATE EAP_data_status
SET DATA_STATUS='GPS_VALID (Bad Pings <=20%)' WHERE "Percent Bad" <= 20;
SELECT * FROM EAP_data_status;
SELECT COUNT(*) FROM EAP_data_status;

DROP table EAP_ass_data;
create table EAP_ass_data as
SELECT * FROM EAP_data_status
FULL JOIN EAP_ASSIGNMENTS_02072025
ON EAP_data_status.BOX_NUMBER = EAP_ASSIGNMENTS_02072025.VMS_ID;
SELECT * FROM EAP_ass_data;
SELECT COUNT(*) FROM EAP_ass_data;

-----------------------------------------------------------------
--SELECT COUNT(*)from elb_obj.ELB_VMS_DATA;
SELECT COUNT(*)from gss.VMS_EAP_API_DATA;
--SELECT DISTINCT BOX_NUMBER FROM elb_obj.ELB_VMS_DATA;
SELECT DISTINCT BOX_NUMBER FROM gss.VMS_EAP_API_DATA;
--SELECT DISTINCT VESSEL_ID FROM elb_obj.ELB_VMS_DATA;
SELECT DISTINCT VESSEL_ID FROM gss.VMS_EAP_API_DATA;

--select * from elb_obj.ELB_VMS_DATA WHERE BOX_NUMBER = '101376185940';
--select COUNT(*) from elb_obj.ELB_VMS_DATA WHERE BOX_NUMBER = '101376185940';

select * from gss.VMS_EAP_API_DATA WHERE BOX_NUMBER = '101376185940';
select COUNT(*) from gss.VMS_EAP_API_DATA WHERE BOX_NUMBER = '101376185940';

-----------------------------------------------------------------
--TEST STUFF....BEGIN AT START HERE BELOW
SELECT MAX(GPS_DATE) AS "Max Date"  -- Selects the maximum value of the ord_date column and aliases it as "Max Date"
FROM gss.VMS_EAP_API_DATA;

SELECT
  TRUNC(CURRENT_DATE + 2,) AS current_date
FROM dual;
select * from gss.VMS_EAP_API_DATA where BOX_NUMBER = '101376185940';
select * from gss.VMS_EAP_API_DATA where BOX_NUMBER = '101376186048';
--SELECT COUNT(*)from gss.VMS_API_DATA; (OLD)
--select * from gss.VMS_EAP_API_DATA; (NEW 03/04/2025)

--SELECT * FROM EAP_data_20250411
--FULL JOIN EAP_ASSIGNMENTS_02072025
--ON EAP_data_20250411.BOX_NUMBER = EAP_ASSIGNMENTS_02072025.VMS_ID;

select type, craft, sum(NVL(regular, 0) + NVL(overtime, 0) ) as total_hours
from hours_t
group by type, craft
order by type, craft
